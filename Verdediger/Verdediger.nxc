#include "libVerdediger.h"

void ReturnToBeginPos()
{
    TextOut(0, LCD_LINE6, "Returning... )");
    if(XPos() > 10) GoLeft();
    if(XPos() < -10) GoRight();
    while(abs(XPos()) > 10)
    {
        UpdateIRValues();
        if(dir != 0) return;
        Wait(10);
    }
    GoNowhere();
    
    if(YPos() < -10) GoForward();
    if(YPos() > 10) GoBackward();
    while(abs(YPos()) > 10)
    {
        UpdateIRValues();
        if(dir != 0) return;
        Wait(10);
    }
    GoNowhere();
    
    //WIP
/*  GoNowhere();
    UpdateIRValues();
    if(dir == 0)
    {
        //Kijk of bal achter robot ligt
        stop Corrector;
        OnFwd(OUT_C, 100);
        until(abs(RELCOMPASSVAL) > 170);
        Off(OUT_C);
        if(dir < 3 || if dir > 7)                                               //Dus ook dir == 0
        {
            start Corrector;
            until(abs(RELCOMPASSVAL < 5));
            if(YPos() < -10) GoForward();
            if(YPos() > 10) GoBackward();
            until(abs(YPos()) < 10);
            GoNowhere();
        }
        else
        {
            //Bal ontwijken, zodat we geen eigen goal krijgen
        }
    }
    else if(dir < 3 || dir > 7)
    {
    }
    else
    {
        if(YPos() < -10) GoForward();
        if(YPos() > 10) GoBackward();
        until(abs(YPos()) < 10);
        GoNowhere();
    }
*/
}

void Deflect()
{
    TextOut(0, LCD_LINE6, "Deflecting...)");
    GoForward();
    Wait(500);
    GoBackward();
    Wait(500);
}

task main()
{
    Init();
    long t0ballunknown = 0;
    long t0ballstraight = 0;
    byte state = 0;
    while(true)
    {
        if(state == STATENORMAL)
        {
            TextOut(0, LCD_LINE6, "Searching_0...");
            UpdateIRValues();
            DrawSensorValues();
            if(USBACKVAL < 10)
            {
                GoForward();
            }
            else if(BALLDIRSTRAIGHT)
            {
                t0ballunknown = 0;
                if(t0ballstraight == 0) t0ballstraight = CurrentTick();
                if(CurrentTick() - t0ballstraight > 2000)
                {
                    if(dist > BALLDISTANCETHRESHOLD) if(correctorenabled) Deflect();
                }
                else GoNowhere();
            }
            else if(BALLDIRUNKNOWN)
            {
                GoNowhere();
                t0ballstraight = 0;
                if(t0ballunknown == 0) t0ballunknown = CurrentTick();
                if(CurrentTick() - t0ballunknown > 2000)
                {
                    until(abs(RELCOMPASSVAL < 5));
                    ReturnToBeginPos();
                }
            }
            else if(BALLDIRLEFT)
            {
                t0ballunknown = 0;
                t0ballstraight = 0;
                if(XPos() > -75)
                {
                    GoLeft();
                }
                else
                {
                    GoNowhere();
                    correctorenabled = false;
                    state = 1;
                }
            }
            else if(BALLDIRRIGHT)
            {
                t0ballunknown = 0;
                t0ballstraight = 0;
                if(XPos() < 75)
                {
                    GoRight();
                }
                else
                {
                    GoNowhere();
                    correctorenabled = false;
                    state = 2;
                }
            }
        }
        if(state == STATELEFT)
        {
            TextOut(0, LCD_LINE6, "Searching_1...");
            UpdateIRValues();
            DrawSensorValues();
            if(BALLDIRSTRAIGHT)
            {
                t0ballunknown = 0;
            }
            else if(BALLDIRUNKNOWN)
            {
                GoNowhere();
                t0ballstraight = 0;
                if(t0ballunknown == 0) t0ballunknown = CurrentTick();
                if(CurrentTick() - t0ballunknown > 2000)
                {
                    correctorenabled = true;
                    until(abs(RELCOMPASSVAL < 5));
                    ReturnToBeginPos();
                }
            }
            else if(BALLDIRLEFT)
            {
                t0ballunknown = 0;
                t0ballstraight = 0;
                if(RELCOMPASSVAL > -90)
                {
                    OnFwd(OUT_C, -100);
                }
                else Off(OUT_C);
            }
            else if(BALLDIRRIGHT)
            {
                t0ballunknown = 0;
                t0ballstraight = 0;
                if(abs(RELCOMPASSVAL < 5))
                {
                    Off(OUT_C);
                    correctorenabled = true;
                    state = 0;
                }
                OnFwd(OUT_C, 100);
            }
        }
        if(state = STATERIGHT)
        {
            if(BALLDIRSTRAIGHT)
            {
                t0ballunknown = 0;
            }
            else if(BALLDIRUNKNOWN)
            {
                GoNowhere();
                t0ballstraight = 0;
                if(t0ballunknown == 0) t0ballunknown = CurrentTick();
                if(CurrentTick() - t0ballunknown > 2000)
                {
                    correctorenabled = true;
                    until(abs(RELCOMPASSVAL < 5));
                    ReturnToBeginPos();
                }
            }
            else if(BALLDIRRIGHT)
            {
                t0ballunknown = 0;
                t0ballstraight = 0;
                if(RELCOMPASSVAL > 90)
                {
                    OnFwd(OUT_C, 100);
                }
                else Off(OUT_C);
            }
            else if(BALLDIRLEFT)
            {
                t0ballunknown = 0;
                t0ballstraight = 0;
                if(abs(RELCOMPASSVAL < 5))
                {
                    Off(OUT_C);
                    correctorenabled = true;
                    state = 0;
                }
                OnFwd(OUT_C, -100);
            }
        }
    }
}
