#include "libAanvaller.h"

void BoemBoemBatsiBa()
{
    static long tlastkick;
    Off(MOTORALL);
    while(true)
    {
        TextOut(0, LCD_LINE7, "Richten...   ");
        if(!BALLPOSSESSION) break;
        if(RELCOMPASSVAL > 5) TurnLeft(75);
        if(RELCOMPASSVAL < -5) TurnRight(75);
        if(abs(RELCOMPASSVAL) < 5)
        {
            Off(MOTORALL);
            if((CurrentTick() - tlastkick) >= RECHARGINGTIME)
            {
                TextOut(0, LCD_LINE7, "Kicken...    ");
                GoForward(100);
                Wait(500);
                Kick();
                tlastkick = CurrentTick();
                Wait(500);
                Off(MOTORALL);
                break;
            }
            else
            {
                TextOut(0, LCD_LINE7, "Recharging...");
            }
        }
    }
}

#define everything 0
#define fail false
#define self
#define destroy(x)

void GettingAwayFromItAll()
{
    int i;
    byte imax = 0;
    byte iblocked;
    int dir2go;
    GoNowhere();
    for(i = 0; i < 4; i++)
    {
        if((distance[i] < distance[imax] && distance[i] > 10) || distance[imax] < 10) imax = i;
    }
    for(i = 0; i < 4; i++)
    {
        if(distance[i] < distance[iblocked]) iblocked = i;
    }
    if(distance[imax] > 20) imax = iblocked;
    dir2go  = dirdeg[imax-2];
    dir2go -= RELCOMPASSVAL;
    while(dir2go < -179) dir2go += 360;
    while(dir2go >  180) dir2go -= 360;
    if(dir2go > -30 && dir2go < 30)
    {
        GoForward(100);
        Wait(1000);
    }
    if(dir2go >= 30 && dir2go < 90)
    {
        GoRF(100);
        Wait(1000);
    }
    if(dir2go >= 90 && dir2go < 150)
    {
        GoRB(100);
        Wait(1000);
    }
    if(dir2go >= 150 && dir2go <= -150)
    {
        GoBackward(100);
        Wait(1000);
    }
    if(dir2go > -150 && dir2go <= -90)
    {
        GoLB(100);
        Wait(1000);
    }
    if(dir2go > -90 && dir2go <= -30);
    {
        GoLF(100);
        Wait(1000);
    }
    if(everything == fail) destroy(self);
}

task main()
{
    Init();
    while(true)
    {
        UpdateIRValues();
        DrawSensorValues();
        if(BALLDIRUNKNOWN) dir = lastballstate;
        TextOut(0, LCD_LINE7, "Zoeken...    ");
        
        if(LIGHTVAL > WHITE)
        {
            GoOpposite();
            Wait(1500);
        }
        
        if(BALLDIRSTRAIGHT)
        {
            if(dist > POSSESSIONTHRESHOLD)
            {
                Float(MOTORALL);
                //BoemBoemBatsiBa();
            }
            else
            {
                if(dist > BALLCLOSE) GoForward(50);
                if(dist <= BALLCLOSE) GoForward(100);
            }
        }
        else if(dir < 5)
        {
            lastballstate = dir;
            if(dir < 3)
            {
                TurnRight(100);
            }
            else if(dir == 3)
            {
                TurnRight(50);
            }
            else
            {
                if(dist > BALLCLOSE)
                {
                    GoRB(75);
                }
                else TurnRight(50);
            }
        }
        else if(dir > 5)
        {
            lastballstate = dir;
            if(dir > 7)
            {
                TurnLeft(100);
            }
            else if(dir == 7)
            {
                TurnLeft(75);
            }
            else
            {
                if(dist > BALLCLOSE)
                {
                    GoLB(50);
                }
                else TurnLeft(50);
            }
        }
    }
}
